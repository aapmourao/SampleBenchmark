// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 2 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:IntermediateOutputPath="C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\obj\Release\net8.0/" /p:OutDir="C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\bin\Release\net8.0/" /p:OutputPath="C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\bin\Release\net8.0/" in C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a
// command took 2.38 sec and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true /p:IntermediateOutputPath="C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\obj\Release\net8.0/" /p:OutDir="C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\bin\Release\net8.0/" /p:OutputPath="C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\bin\Release\net8.0/" --output "C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\bin\Release\net8.0/" in C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a
// command took 4.94 sec and exited with 0
// ***** Done, took 00:00:07 (7.42 sec)   *****
// Found 2 benchmarks:
//   FunctionBenchmarkExecutor.BenchmarkSimpleFunctionCompileTimeLogging: DefaultJob
//   FunctionBenchmarkExecutor.BenchmarkSimpleFunctionLogging: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FunctionBenchmarkExecutor.BenchmarkSimpleFunctionCompileTimeLogging: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 9e4a487a-d504-43b9-848c-b67516cb2c4a.dll --anonymousPipes 1560 1248 --benchmarkName FunctionBenchmarkExecutor.BenchmarkSimpleFunctionCompileTimeLogging --job Default --benchmarkId 0 in C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\bin\Release\net8.0
// BeforeAnythingElse

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.Extensions.Logging.ILogger`1[SimpleFunctionLogging]' while attempting to activate 'SimpleFunctionCompileTimeLogging'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)
   at FunctionBenchmarkExecutor..ctor() in C:\_samples\SampleBenchemark\FunctionBenchmarkExecutor.cs:line 18
   at BenchmarkDotNet.Autogenerated.Runnable_0..ctor() in C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\9e4a487a-d504-43b9-848c-b67516cb2c4a.notcs:line 190
   at BenchmarkDotNet.Autogenerated.Runnable_0.Run(IHost host, String benchmarkName) in C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\9e4a487a-d504-43b9-848c-b67516cb2c4a.notcs:line 138
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\9e4a487a-d504-43b9-848c-b67516cb2c4a.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 46000 has exited with code -1.

// ** Remained 1 (50.0%) benchmark(s) to run. Estimated finish 2025-01-09 11:31 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: FunctionBenchmarkExecutor.BenchmarkSimpleFunctionLogging: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 9e4a487a-d504-43b9-848c-b67516cb2c4a.dll --anonymousPipes 1488 1268 --benchmarkName FunctionBenchmarkExecutor.BenchmarkSimpleFunctionLogging --job Default --benchmarkId 1 in C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\bin\Release\net8.0
// BeforeAnythingElse

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.InvalidOperationException: Unable to resolve service for type 'Microsoft.Extensions.Logging.ILogger`1[SimpleFunctionLogging]' while attempting to activate 'SimpleFunctionCompileTimeLogging'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)
   at FunctionBenchmarkExecutor..ctor() in C:\_samples\SampleBenchemark\FunctionBenchmarkExecutor.cs:line 18
   at BenchmarkDotNet.Autogenerated.Runnable_1..ctor() in C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\9e4a487a-d504-43b9-848c-b67516cb2c4a.notcs:line 382
   at BenchmarkDotNet.Autogenerated.Runnable_1.Run(IHost host, String benchmarkName) in C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\9e4a487a-d504-43b9-848c-b67516cb2c4a.notcs:line 330
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   --- End of inner exception stack trace ---
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
   at System.Reflection.MethodBaseInvoker.InvokeWithFewArgs(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in C:\_samples\SampleBenchemark\bin\Release\net8.0\9e4a487a-d504-43b9-848c-b67516cb2c4a\9e4a487a-d504-43b9-848c-b67516cb2c4a.notcs:line 57
// AfterAll
No Workload Results were obtained from the run.
// Benchmark Process 40308 has exited with code -1.

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2025-01-09 11:31 (0h 0m from now) **
Successfully reverted power plan (GUID: 381b4222-f694-41f0-9685-ff5bb260df2e FriendlyName: Balanced)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\FunctionBenchmarkExecutor-report.csv
  BenchmarkDotNet.Artifacts\results\FunctionBenchmarkExecutor-report-github.md
  BenchmarkDotNet.Artifacts\results\FunctionBenchmarkExecutor-report.html

// * Detailed results *
FunctionBenchmarkExecutor.BenchmarkSimpleFunctionCompileTimeLogging: DefaultJob
Runtime = ; GC = 
There are not any results runs

FunctionBenchmarkExecutor.BenchmarkSimpleFunctionLogging: DefaultJob
Runtime = ; GC = 
There are not any results runs

// * Summary *

BenchmarkDotNet v0.14.0, Windows 10 (10.0.19045.5247/22H2/2022Update)
11th Gen Intel Core i7-11850H 2.50GHz, 1 CPU, 16 logical and 8 physical cores
.NET SDK 9.0.101
  [Host] : .NET 8.0.11 (8.0.1124.51707), X64 RyuJIT AVX-512F+CD+BW+DQ+VL+VBMI


| Method                                    | Mean | Error |
|------------------------------------------ |-----:|------:|
| BenchmarkSimpleFunctionCompileTimeLogging |   NA |    NA |
| BenchmarkSimpleFunctionLogging            |   NA |    NA |

Benchmarks with issues:
  FunctionBenchmarkExecutor.BenchmarkSimpleFunctionCompileTimeLogging: DefaultJob
  FunctionBenchmarkExecutor.BenchmarkSimpleFunctionLogging: DefaultJob

// * Warnings *
Environment
  Summary -> Detected error exit code from one of the benchmarks. It might be caused by following antivirus software:
        - CrowdStrike Falcon Sensor (%ProgramFiles%\CrowdStrike\CSFalconController.exe)
        - Windows Defender (windowsdefender://)
Use InProcessEmitToolchain or InProcessNoEmitToolchain to avoid new process creation.


// * Legends *
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  1 ns  : 1 Nanosecond (0.000000001 sec)

// ***** BenchmarkRunner: End *****
Run time: 00:00:00 (0.82 sec), executed benchmarks: 2

Global total time: 00:00:08 (8.64 sec), executed benchmarks: 2
// * Artifacts cleanup *
Artifacts cleanup is finished
